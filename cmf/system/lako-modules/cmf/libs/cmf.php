<?php/** * Loads files given paths */class lako_cmf extends lako_lib_base{  protected $version      = '0.0.1';  const     IS_SINGLETON  = true;  public    $templates    =  null;  public    $config       =  null;        public function __construct($config = array()){    //the CMF will hold a self instantiated private config factory    lako::import('config_factory');    $this->config = new lako_config_factory();    $this->config->add_path(CMF_PATH . '/config');        // we also hold a templates object    lako::import('templates');    $this->templates = new lako_templates(array(      'paths' => array(CMF_PATH .'/templates')    ));  }    public function render(){    $path = isset($_SERVER['PATH_INFO'])? $_SERVER['PATH_INFO']: '/';    $routes = $this->config->get('routes');        $source = array();    if(isset($routes['patterns'][$path]))      $source = $routes['patterns'][$path];    else      $source = $routes['patterns']['404'];        $template = $source['template']? $source['template']: 'default';    $data = $source['data_provider']              ? lako::get('data_provider')->get($source['data_provider'])              : lako::get('data_provider')->stub();        $this->templates->render($template, $data);
  } }